stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocksm %>% spread(stock, price)
swirl()
submit()
extract_numeric('class5')
submit()
submit()
submit()
extract_numeric(students3[,class])
submit()
extract_numeric(students3[,class]))
extract_numeric(students3[,class])
extract_numeric(students3[class,])
extract_numeric(class)
swirl()
submit()
submit()
sstudents4
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status='passed')
failed<-mutate(failed,status='failed')
?bind_rows
bind_rows(passed,failed)
sat
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment<-now()
this_moment
second(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy(March 12, 1975)
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920\1\2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment,now())
this_moment<-update(this_moment,hours = 10, minutes = 50, seconds = 50)
this_moment
nyc<-now()
nyc<-now("America/New_York")
nyc
depart<-nyc + days(2)
depart
depart<-update(depart,hours=15, minutes = 34)
depart<-update(depart,hours=17, minutes = 34)
depart
arrive<-depart +hours(15) + minutes(50)
?with_tz
arrive<-with_tz(arrive("Asia/Hong_Kong"))
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time(mdy("June 17, 2008", tz="Singapore"))
last_time<-(mdy("June 17, 2008", tz="Singapore"))
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long<-new_interval(last_time,arrival)
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
install.packages('ggplot2')
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
?legend
?legend
?legend
?legend
library(dplyr)
library(lattice)
library(ggplot2)
library(lubridate)
library(tidyr)
library(stringr)
setwd("C:/Users/The Rutlands/Google Drive/Data Scientist Specialisation/Reproducable Research/RepData_PeerAssessment1")
zipLoc<-'./activity.zip'
unzip(zipLoc)
activity<-read.csv('./activity.csv', colClasses = c('numeric','Date','character'))
activity$date<-as.Date(activity$date)
activity$interval<-as.factor(str_pad(activity$interval,width=4,side='left', pad='0'))
str(activity)
class(activity$date)
daily_steps<-activity %>%
group_by(date) %>%
summarise(steps=sum(steps))
daily_steps
hist(daily_steps$steps, breaks=20)
mean(daily_steps$steps, na.rm=TRUE)
median(daily_steps$steps, na.rm=TRUE)
avg_steps <- activity %>%
group_by(interval) %>%
summarise(average_steps=mean(steps, na.rm=TRUE))
View(avg_steps)
top_n(avg_steps,1,average_steps)
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='n')
lines(avg_steps$average_steps)
sum(is.na(activity$steps))
plot(x=as.numeric(activity$interval_factor),y=activity$steps)
complete.cases(activity)
nrows(activity[complete.cases(activity),])
nrow(activity[complete.cases(activity),])
nrow(activity[!complete.cases(activity),])
#subset the rows without steps data
no_steps<-activity[!complete.cases(activity),]
no_steps
left_join(no_steps,avg_steps, by = c('interval' = 'interval'))
NA_lookup<-left_join(no_steps,avg_steps, by = c('interval' = 'interval'))
replaced_NAs<-NA_lookup[,c(4,2,3)]
replaced_NAs
nrow(activity)
replaced_NAs<-NA_lookup[,c(4,2,3)]
nrow(activity)
#remove NAS from original
activity[-!complete.cases(activity),]
nrow(activity)
cbind(activity,replaced_NAs)
nrow(activity)
nrow(activity)
#remove NAS from original
activity[-!complete.cases(activity),]
nrow(activity)
rbind(activity,replaced_NAs)
nrow(activity)
names(activity)
head(replaced_NAs)
#generate data to bind back into original
replaced_NAs<-NA_lookup[,c(4,2,3)]
names(replaced_NAs)<-names(activity)
nrow(activity)
#remove NAS from original
activity[-!complete.cases(activity),]
nrow(activity)
rbind(activity,replaced_NAs)
nrow(activity)
library(dplyr)
library(lattice)
library(ggplot2)
library(lubridate)
library(tidyr)
library(stringr)
setwd("C:/Users/The Rutlands/Google Drive/Data Scientist Specialisation/Reproducable Research/RepData_PeerAssessment1")
zipLoc<-'./activity.zip'
unzip(zipLoc)
activity<-read.csv('./activity.csv', colClasses = c('numeric','Date','character'))
activity$date<-as.Date(activity$date)
activity$interval<-as.factor(str_pad(activity$interval,width=4,side='left', pad='0'))
str(activity)
class(activity$date)
#Calculate and store the number of steps taken each day
daily_steps<-activity %>%
group_by(date) %>%
summarise(steps=sum(steps))
daily_steps
hist(daily_steps$steps, breaks=20)
#Calculate the mean number of steps. Remove NAs or Mean will return NA
mean(daily_steps$steps, na.rm=TRUE)
#Calculate the median number of steps. Remove NAs or Mean will return NA
median(daily_steps$steps, na.rm=TRUE)
#Calculate the average number of steps by interval. Remove NAs or Mean will return NA
avg_steps <- activity %>%
group_by(interval) %>%
summarise(average_steps=mean(steps, na.rm=TRUE))
View(avg_steps)
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='n')
lines(avg_steps$average_steps)
#Which interval has the highest average number of steps?
top_n(avg_steps,1,average_steps)
#Calculate the number of records where steps aren't recorded
sum(is.na(activity$steps))
plot(x=as.numeric(activity$interval_factor),y=activity$steps)
#subset the rows without steps data
no_steps<-activity[!complete.cases(activity),]
#get average steps from earlier table to fill in blanks
NA_lookup<-left_join(no_steps,avg_steps, by = c('interval' = 'interval'))
#generate data to bind back into original
replaced_NAs<-NA_lookup[,c(4,2,3)]
names(replaced_NAs)<-names(activity)
nrow(activity)
#remove NAS from original
new_activity<-activity[-!complete.cases(activity),]
nrow(new_activity)
rbind(new_activity,replaced_NAs)
nrow(new_activity)
names(activity)
nrow(activity)
#remove NAS from original
new_activity<-activity[-!complete.cases(activity),]
nrow(new_activity)
rbind(new_activity,replaced_NAs)
nrow(new_activity)
new_activity<-activity[-!complete.cases(activity),]
nrow(new_activity)
new_activity<-activity[-!complete.cases(activity),]
nrow(new_activity)
nrow(activity)
library(dplyr)
library(lattice)
library(ggplot2)
library(lubridate)
library(tidyr)
library(stringr)
setwd("C:/Users/The Rutlands/Google Drive/Data Scientist Specialisation/Reproducable Research/RepData_PeerAssessment1")
zipLoc<-'./activity.zip'
unzip(zipLoc)
activity<-read.csv('./activity.csv', colClasses = c('numeric','Date','character'))
activity$date<-as.Date(activity$date)
activity$interval<-as.factor(str_pad(activity$interval,width=4,side='left', pad='0'))
str(activity)
class(activity$date)
#Calculate and store the number of steps taken each day
daily_steps<-activity %>%
group_by(date) %>%
summarise(steps=sum(steps))
daily_steps
hist(daily_steps$steps, breaks=20)
#Calculate the mean number of steps. Remove NAs or Mean will return NA
mean(daily_steps$steps, na.rm=TRUE)
#Calculate the median number of steps. Remove NAs or Mean will return NA
median(daily_steps$steps, na.rm=TRUE)
#Calculate the average number of steps by interval. Remove NAs or Mean will return NA
avg_steps <- activity %>%
group_by(interval) %>%
summarise(average_steps=mean(steps, na.rm=TRUE))
View(avg_steps)
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='n')
lines(avg_steps$average_steps)
#Which interval has the highest average number of steps?
top_n(avg_steps,1,average_steps)
#Calculate the number of records where steps aren't recorded
sum(is.na(activity$steps))
plot(x=as.numeric(activity$interval_factor),y=activity$steps)
nrow(activity)
nrow(complete.cases(activity))
omplete.cases(activity)
complete.cases(activity)
nrow(activity[complete.cases(activity),])
nrow(activity[!complete.cases(activity),])
activity[-!complete.cases(activity),]
ctivity[complete.cases(activity),]
activity[complete.cases(activity),]
nrow(activity)
nrow(activity[!complete.cases(activity),])
#remove NAS from original
new_activity<-activity[complete.cases(activity),]
nrow(new_activity)
rbind(new_activity,replaced_NAs)
nrow(new_activity)
nrow(activity[complete.cases(activity),])
nrow(new_activity)
rbind(new_activity,replaced_NAs)
nrow(new_activity)
new_activity<-rbind(new_activity,replaced_NAs)
nrow(new_activity)
#remove NAS from original
new_activity<-activity[complete.cases(activity),]
nrow(new_activity)
#add in rows with calculated averages
new_activity<-rbind(new_activity,replaced_NAs)
nrow(new_activity)
#Calculate daily steps from new data
new_daily_steps<-new_activity %>%
group_by(date) %>%
summarise(steps=sum(steps))
mean(new_daily_steps$steps)
#Calculate the median number of steps. Remove NAs or Mean will return NA
median(new_daily_steps$steps)
mean(daily_steps$steps, na.rm=TRUE)
#Calculate the median number of steps. Remove NAs or Mean will return NA
median(daily_steps$steps, na.rm=TRUE)
VIEW(daily_steps)
View(daily_steps)
write.csv(daily_steps, file='./daily_steps')
write.csv(new_daily_steps, file='./new_daily_steps.csv')
mean(new_daily_steps$steps)
#Calculate the median number of steps. Remove NAs or Mean will return NA
median(new_daily_steps$steps)
weekdays(new_daily_steps$date)
write.csv(daily_steps, file='./daily_steps.csv')
install.packages(chron)
install.packages('chron')
library(chron)
is.weekend(new_daily_steps$date)
is.weekend(new_activity$date)
new_activity$weekend<-factor(is.weekend(new_activity$date), levels=c('Weekend','weekday'))
str(new_activity)
new_activity$weekend<-factor(is.weekend(new_activity$date), labels=c('TRUE','FALSE'),
levels=c('Weekend','Weekday'))
str(new_activity)
new_activity$weekend<-factor(is.weekend(new_activity$date), labels=c(TRUE,FALSE),
levels=c('Weekend','Weekday'))
str(new_activity)
new_activity$weekend<-factor(is.weekend(new_activity$date), levels=c(TRUE,FALSE),
labels=c('Weekend','Weekday'))
str(new_activity)
xyplot(steps ~ interval | weekend, new_activity)
xyplot(steps ~ interval | weekend, new_activity, layout=c(1,2))
new_avg_steps <- activity %>%
group_by(interval) %>%
summarise(average_steps=mean(steps, na.rm=TRUE))
View(new_avg_steps)
par(mfrow=2,1)
plot(x=new_avg_steps$interval,y=new_avg_steps$average_steps,type='n')
lines(new_avg_steps$average_steps)
plot(x=new_avg_steps$interval,y=new_avg_steps$average_steps,type='n')
lines(new_avg_steps$average_steps)
par(mfrow=c(2,1))
plot(x=new_avg_steps$interval,y=new_avg_steps$average_steps,type='n')
lines(new_avg_steps$average_steps)
plot(x=new_avg_steps$interval,y=new_avg_steps$average_steps,type='n')
lines(new_avg_steps$average_steps)
xyplot(steps ~ interval | weekend, new_activity, layout=c(1,2), type='l')
xyplot(mean(steps) ~ interval | weekend, new_activity, layout=c(1,2), type='l')
xyplot(steps ~ interval | weekend, new_activity, layout=c(1,2), type='l')
new_avg_steps <- new_activity %>%
group_by(interval) %>%
summarise(average_steps=mean(steps))
View(new_avg_steps)
new_avg_steps <- new_activity %>%
group_by(weekend) %>%
summarise(average_steps=mean(steps))
View(new_avg_steps)
new_avg_steps <- new_activity %>%
group_by(weekend,interval) %>%
summarise(average_steps=mean(steps))
View(new_avg_steps)
xyplot(average_steps ~ interval | weekend, new_activity, layout=c(1,2), type='l')
xyplot(average_steps ~ interval | weekend, new_avg_steps, layout=c(1,2), type='l')
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='n')
lines(avg_steps$average_steps)
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='n', xlab='Time'
,ylab='Average No. of Steps')
lines(avg_steps$average_steps)
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='l', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='l', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval', lab=c(2,2,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval', lab=c(2,2,10))
lines(avg_steps$average_steps)
par(lab=c(2,2,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval', lab=c(2,2,10))
lines(avg_steps$average_steps)
par(lab=c(2,2,10))
par(lab=c(2,2,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
par(lab=c(2,10,1))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
par(lab=c(10,10,1))
par(lab=c(15,10,1))
par(lab=c(15,10,1))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(lab=c(30,10,1))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(lab=c(200,10,1))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(lab=c(200,10,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(lab=c(200,8,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(lab=c(8,8,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(lab=c(8,6,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(lab=c(8,10,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(lab=c(8,10,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval', xaxt='n')
lines(avg_steps$average_steps)
axis(side = 1, at = c(1,5,10))
par(lab=c(8,10,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval', xaxt='n')
lines(avg_steps$average_steps)
axis(side = 1, at = c(0000,0100,0200,0300,0400,0500,0600,0700))
par(lab=c(8,10,10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval', xaxt='n')
lines(avg_steps$average_steps)
axis(side = 1, at = c(0000,100,200,300,400,500,600,700,800,900,100,1100)
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval', xaxt='n')
lines(avg_steps$average_steps)
axis(side = 1, at = c(0000,100,200,300,400,500,600,700,800,900,100,1100))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
axis(side = 1, at = c(2315))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval', xaxt='n')
lines(avg_steps$average_steps)
axis(side = 1, at = c(2315))
par(xaxp  = c(0000, 2315, 20))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
as.numeric(unique(activity$interval))
par(xaxp  = c(0, 288, 10))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(xaxp  = c(0, 288, 20))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
axis(side = 1, at = c(2315))
par(xaxp  = c(0, 288, 20))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
par(xaxp  = c(0, 288, 1))
#plot a time series graph of the 5 minute intervals
plot(x=avg_steps$interval,y=avg_steps$average_steps,type='b', xlab='Time'
,ylab='Average No. of Steps', main='Average Steps per Interval')
lines(avg_steps$average_steps)
install.packages('knitr')
library(knitr)
